# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/JISSAY_REP

    docker:
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - add_ssh_keys:
          fingerprints: 
            - "b6:b6:5e:41:12:41:d5:f7:8b:a9:ce:15:45:33:42:b0"
      - checkout:
          path: ~/JISSAY_REP/

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle.kts" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: gradle build

  test:
      environment:
        # Customize the JVM maximum heap limit
        JVM_OPTS: -Xmx3200m
        TERM: dumb

      docker:
        - image: circleci/openjdk:8-jdk

      steps:
        - checkout
        - attach_workspace:
            at: .
        - run: gradle dependencies

        # run tests!
        - run: gradle cleanTest test

        # store tests results
        - store_test_results:
            path: test

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build


              # SAMPLE CONFIGURATION #
            # https://github.com/CircleCI-Public/circleci-demo-java-spring/blob/master/.circleci/config.yml
#version: 2
#jobs:
#  build:
#    environment:
#      # Configure the JVM and Gradle to avoid OOM errors
#      _JAVA_OPTIONS: "-Xmx3g"
#      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
#    docker:
#      - image: circleci/openjdk:11.0.3-jdk-stretch
#    steps:
#      - checkout
#      - restore_cache:
#          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
#      - restore_cache:
#          key: v1-gradle-cache-{{ checksum "build.gradle" }}
#      - run:
#          name: Install dependencies
#          command: ./gradlew build -x test
#      - save_cache:
#          paths:
#            - ~/.gradle/wrapper
#          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
#      - save_cache:
#          paths:
#            - ~/.gradle/caches
#          key: v1-gradle-cache-{{ checksum "build.gradle" }}
#      - persist_to_workspace:
#          root: .
#          paths:
#            - build
#  test:
#    # Remove if parallelism is not desired
#    parallelism: 2
#    environment:
#      # Configure the JVM and Gradle to avoid OOM errors
#      _JAVA_OPTIONS: "-Xmx3g"
#      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
#    docker:
#      - image: circleci/openjdk:11.0.3-jdk-stretch
#      - image: circleci/postgres:12-alpine
#        environment:
#          POSTGRES_USER: postgres
#          POSTGRES_DB: circle_test
#    steps:
#      - checkout
#      - attach_workspace:
#          at: .
#      - run:
#          name: Run tests in parallel
#          # Use "./gradlew test" instead if tests are not run in parallel
#          command: |
#            cd src/test/java
#            # Get list of classnames of tests that should run on this node
#            CLASSNAMES=$(circleci tests glob "**/*.java" \
#              | cut -c 1- | sed 's@/@.@g' \
#              | sed 's/.\{5\}$//' \
#              | circleci tests split --split-by=timings --timings-type=classname)
#            cd ../../..
#            # Format the arguments to "./gradlew test"
#            GRADLE_ARGS=$(echo $CLASSNAMES | awk '{for (i=1; i<=NF; i++) print "--tests",$i}')
#            echo "Prepared arguments for Gradle: $GRADLE_ARGS"
#            ./gradlew test $GRADLE_ARGS
#      - run:
#          name: Generate code coverage report
#          command:
#            ./gradlew jacocoTestReport
#      - store_test_results:
#          path: build/test-results/test
#      - store_artifacts:
#          path: build/test-results/test
#          when: always
#      - store_artifacts:
#          path: build/reports/jacoco/test/html
#          when: always
#      - run:
#          name: Assemble JAR
#          command: |
#            # Skip this for other nodes
#            if [ "$CIRCLE_NODE_INDEX" == 0 ]; then
#              ./gradlew assemble
#            fi
#      # This will be empty for all nodes except the first one
#      - store_artifacts:
#          path: build/libs
#
#workflows:
#  version: 2
#  workflow:
#    jobs:
#      - build
#      - test:
#          requires:
#            - build