# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/JISSAY_REP

    docker:
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - add_ssh_keys:
          fingerprints: 
            - "b6:b6:5e:41:12:41:d5:f7:8b:a9:ce:15:45:33:42:b0"
      - checkout:
          path: ~/JISSAY_REP/

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle.kts" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Build project
          command: gradle build

  test:
      working_directory: ~/JISSAY_REP
      environment:
        # Customize the JVM maximum heap limit
        JVM_OPTS: -Xmx3200m
        TERM: dumb

      docker:
        - image: circleci/openjdk:8-jdk

      steps:
        - attach_workspace:
            at: .

        - checkout:
            path: ~/JISSAY_REP/
        - run:
            name: Load gradle dependencies
            command: gradle dependencies

        # run tests!
        - run:
            name: Run tests
            command: gradle cleanTest test

        # store tests results
        - store_test_results:
            path: build/reports/test

        # Setup coverage report for Code Climate
        - run:
            name: Setup Code Climate test-reporter
            command: |
              curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
              chmod +x ./cc-test-reporter
              ./cc-test-reporter before-build
            when: always

        # run code coverage
        - run:
            name: Run code coverage
            command: gradle jacocoTestReport jacocoTestCoverageVerification

        # send coverage report
        - run:
            name: Send coverage report to Code Climate
            command: ./cc-test-reporter after-build --coverage-input-type jacoco --exit-code $?
            when: always

        - store_artifacts:
            path: build/reports/coverage

  lint:
      working_directory: ~/JISSAY_REP
      docker:
        - image: circleci/openjdk:8-jdk

      steps:
        - attach_workspace:
            at: .

        - checkout:
            path: ~/JISSAY_REP/

        - run:
            name: Lint code
            command: gradle check

        # Store lint results
        - store_test_results:
            path: build/reports/ktlint

workflows:
  version: 2
  build_test_lint:
    jobs:
      - build
      - test:
          requires:
            - build
      - lint:
          requires:
            - build